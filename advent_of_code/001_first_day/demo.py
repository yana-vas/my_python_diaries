# Условие:
# Група елфи си броят калориите изразходени през деня, като са си записaли калориите на нов ред за всяко нова ястие, което са консумирали през деня
# Когато стигнеш до нов празен ред, това означава, че елфът се е нахранил и продължаваме към следващият елф по същия принцип

# Пример (погледни от ред 105 до ред 118):
# 1000 -> 1-ви елф 1-во ядене
# 2000 -> 1-ви елф 2-ро ядене
# 3000 -> 1-ви елф 3-то ядене
# –> празен ред -> продължаваме със следващият елф
# 4000 -> 2-ри елф 1-во ядене
# –> празен ред -> продължаваме със следващият елф
# 5000 -> 3-ти елф 1-во ядене
# 6000 -> 3-ти елф 2-ро ядене
# –> празен ред -> продължаваме със следващият елф
# 7000 -> 4-ти елф 1-во ядене
# 8000 -> 4-ти елф 2-ро ядене
# 9000 -> 4-ти елф 3-то ядене
# –> празен ред -> продължаваме със следващият елф
# 10000 -> 5-ти елф 1-во ядене

# Задачата ни е да кажем кои елф е изял най-много през деня?

# За да направим това, първо тябва да съберем калориите общо за целия ден

# От примера, първият елф е изял 1000 калории за 1-во ядене, 2000 за 2-ро и 3000 за 3-то. Сумата е 6000 (1000+2000+3000)

# Ще съхраняваме сумата на калориите на всеки елф в списък (list) "calories", защото по условие искат да намерим кои елф е изял най-много храна през деня.

# Така че, ще добавим към calories сумата от калориите на първия елф  # calories = [6000]

# Продължаваме с втория елф. Той е консумирал 4000 за 1-во ядене. Сумата е 4000
# Така че, ще добавим към calories сумата от калориите на втория елф  # calories = [6000, 4000]

# Продължаваме с третя елф. Той е изял 5000 за 1-во ядене и 6000 за 2-ро ядене. Сумата е 11000 (5000 + 6000)
# Така че, ще добавим към calories сумата от калориите на третия елф  # calories = [6000, 4000, 11000]

# Продължаваме с четвъртия елф. Той е изял 7000 за 1-во ядене, 8000 за 2-ро ядене и 9000 за 3-то ядене. Сумата е 24000 (7000 + 8000 + 9000)
# Така че, ще добавим към calories сумата от калориите на четвъртия елф  # calories = [6000, 4000, 11000, 24000]

# Продължаваме с петия елф. Той е изял 10000 за 1-во ядене. Сумата е 10000
# Така че, ще добавим към calories сумата от калориите на четвъртия елф  # calories = [6000, 4000, 11000, 24000, 10000]


calories = []
elf_call = 0

# To open the file, use the built-in open() function.
# The open() function returns a file object, which has a read() method for reading the content of the file:
input_data = open("input_data.txt", 'r').read()  # за повече информация виж ред 103
# така изглежда seventh_day_input_data.txt -> '1000\n2000\n3000\n\n4000\n\n5000\n6000\n\n7000\n8000\n9000\n\n10000'
input_data = input_data.split('\n\n')  # разделяме по два нови реда, защото само тогава започват калориите на новия елф
# така изглежда seventh_day_input_data.txt -> ['1000\n2000\n3000', '4000', '5000\n6000', '7000\n8000\n9000', '10000']
# всеки елемент от листа са калориите консумирани за деня от елфа

for elf_cal in input_data:  # взимаме сумата за всеки елф и я добавяме в calories
    current_calories_list = elf_cal.split('\n')  # разделяме калориите по нов ред (\n)
    # така изглежда current_calories_list за 1-вия елемент -> ['1000', '2000', '3000']

    # превърщаме ги в цели числа (int), защото в момента са в текстов формат (string)
    int_current_calories_list = list(map(int, current_calories_list))  # [int(cal) for cal in current_calories_list]
    sum_current_calories = sum(int_current_calories_list)  # взимаме сумата на калориите, чрез функцията sum(), която ни дава сумата на елементите в листа (ред 25)
    calories.append(sum_current_calories)  # добавяме сумата в calories (ред 29)

#  По условие: Find the Elf carrying the most Calories. How many total Calories is that Elf carrying? (ред 21)

#  calories изглежда така -> [6000, 4000, 11000, 24000, 10000]
# най-голямата стойност е 24000, чрез функцията max ще получим елемента с най-голяма стойност (24000)
print(max(calories)) # max e built-in функция, която ни дава елемента от листа с най-голяма стойност

# Second part

# Условие: Find the top three Elves carrying the most Calories.
# How many Calories are those Elves carrying in total?

top_three_max_call = []  # правя си list, в който ще добавя първите три елфи, които консумирали най-много калории
for i in range(3):
    max_curr_call = max(calories)  # в тази променлива ще държим елемента с най-голяма стойност от calories
    # max_curr_call = 24000
    top_three_max_call.append(max_curr_call)  # добавяме max_curr_call в top_three_max_call
    # top_three_max_call = [24000]
    # calories = [6000, 4000, 11000, 24000, 10000]
    calories.remove(max_curr_call)  # махаме елемента с най-голяма стойност от calories
    # calories = [6000, 4000, 11000, 10000]
    # правим това 3 пъти (по условие - ред 72)
    # тоест, втория път:
    # max_curr_call = 11000 (ред 77)
    # top_three_max_call = [24000, 11000] (ред 79)
    # calories = [6000, 4000, 10000] (ред 82)

    # третия път:
    # max_curr_call = 10000 (ред 77)
    # top_three_max_call = [24000, 11000, 10000] (ред 79)
    # calories = [6000, 4000] (ред 82)

# top_three_max_call = [24000, 11000, 10000]

print(sum(top_three_max_call))  # взимаме сумата на всички елементи от top_three_max_call, чрез функцията sum()


# Честито! Вече реши първа задача от Advent Of Code.


# seventh_day_input_data.txt.txt  е фаил, който създадох за да държа входните данни в него
# seventh_day_input_data.txt.txt
# 1000
# 2000
# 3000
#
# 4000
#
# 5000
# 6000
#
# 7000
# 8000
# 9000
#
# 10000